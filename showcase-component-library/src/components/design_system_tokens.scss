// Colors

// Tint function: mixes a color with white to create a lighter color
@function tint($color, $amount) {
  @return mix(white, $color, $amount);
}

// Shade function: mixes a color with black to create a darker color
@function shade($color, $amount) {
  @return mix(black, $color, $amount);
}

@mixin define-color($title, $color, $textColor) {
  --#{$title}: #{$color};
  --#{$title}-h: #{hue($color)};
  --#{$title}-l: #{lightness($color)};
  --#{$title}-s: #{saturation($color)};
  --#{$title}-a: #{alpha($color)};
  --#{$title}-dark: #{shade($color, 10%)};
  --#{$title}-darkest: #{shade($color, 20%)};
  --#{$title}-light: #{tint($color, 10%)};
  --#{$title}-lightest: #{tint($color, 20%)};
  --#{$title}-text: #{$textColor};
}

:root {
  @include define-color(color-primary, #03A9F4, #FFFFFF);
  @include define-color(color-accent, #8BC34A, #FFFFFF);
  @include define-color(color-error, #F44336, #FFFFFF);
  @include define-color(color-warning, #FFC107, #FFFFFF);
  @include define-color(color-divider, #BDBDBD, #FFFFFF);
  --color-text-primary: #212121;
  --color-text-secondary: #0288D1;
  --color-text-light: #FFFFFF;
}

// Sass variable for colors defined in CSS variables with light, lightest, dark, darkest variants
$color-primary: var(--color-primary);
$color-primary-light: var(--color-primary-light);
$color-primary-lightest: var(--color-primary-lightest);
$color-primary-dark: var(--color-primary-dark);
$color-primary-darkest: var(--color-primary-darkest);
$color-accent: var(--color-accent);
$color-accent-light: var(--color-accent-light);
$color-accent-lightest: var(--color-accent-lightest);
$color-accent-dark: var(--color-accent-dark);
$color-accent-darkest: var(--color-accent-darkest);
$color-error: var(--color-error);
$color-error-light: var(--color-error-light);
$color-error-lightest: var(--color-error-lightest);
$color-error-dark: var(--color-error-dark);
$color-error-darkest: var(--color-error-darkest);
$color-warning: var(--color-warning);
$color-warning-light: var(--color-warning-light);
$color-warning-lightest: var(--color-warning-lightest);
$color-warning-dark: var(--color-warning-dark);
$color-warning-darkest: var(--color-warning-darkest);
$color-divider: var(--color-divider);
$color-divider-light: var(--color-divider-light);
$color-divider-lightest: var(--color-divider-lightest);
$color-divider-dark: var(--color-divider-dark);
$color-divider-darkest: var(--color-divider-darkest);
$color-text-primary: var(--color-text-primary);
$color-text-secondary: var(--color-text-secondary);
$color-text-light: var(--color-text-light);

// Typography
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

// Heading 1
@mixin typography-heading-1 {
  font-family: 'Roboto', serif;
  font-style: normal;
  font-weight: 300;
  font-size: 50px;
  line-height: 100%;
  letter-spacing: -0.015em;
}

// Heading 3
@mixin typography-heading-3 {
  font-family: 'Roboto', serif;
  font-style: normal;
  font-weight: 400;
  font-size: 48px;
  line-height: 100%;
}

// Heading 4
@mixin typography-heading-4 {
  font-family: 'Roboto', serif;
  font-style: normal;
  font-weight: 400;
  font-size: 34px;
  line-height: 100%;
  letter-spacing: 0.0025em;
}

// Heading 5
@mixin typography-heading-5 {
  font-family: 'Roboto', serif;
  font-style: normal;
  font-weight: 400;
  font-size: 24px;
  line-height: 100%;
}

// Body 1
@mixin typography-body-1 {
  font-family: 'Roboto', serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 100%;
  letter-spacing: 0.005em;
}

// Subtitle 2
@mixin typography-subtitle-2 {
  font-family: 'Roboto', serif;
  font-style: normal;
  font-weight: 500;
  font-size: 14px;
  line-height: 100%;
  letter-spacing: 0.001em;
}

// Button
@mixin typography-button {
  font-family: 'Roboto', serif;
  font-style: normal;
  font-weight: 500;
  font-size: 14px;
  letter-spacing: 0.0125em;
  text-transform: uppercase;
}

// Uppercase
@mixin typography-uppercase {
  text-transform: uppercase;
}

// Elevation
@mixin dp2 {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
}

// Utilities
@mixin ripple($color) {
  position: relative;
  overflow: hidden;
  transform: translate3d(0, 0, 0);

  &::before {
    content: '';
    display: block;
    position: absolute;
    border-radius: 50%;
    width: 100px;
    height: 100px;
    background-color: $color;
    opacity: 0;
    transform: scale(0);
    transition: transform 0.5s, opacity 0.3s;
  }

  &:active::before {
    transform: scale(2);
    opacity: 0.2;
    transition: 0s;
  }
}
